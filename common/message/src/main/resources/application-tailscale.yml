spring:
  rabbitmq:
    host: 100.64.0.5
    port: 5673
    username: guest
    password: wuanfuck321.
    virtual-host: /
    queueName: message
  cache:
    type: redis
  jackson:
   serialization:
     WRITE_DATES_AS_TIMESTAMPS: false
  rabbitmq:
    host: 100.64.0.5
    port: 5673
    username: guest
    password: wuanfuck321.
    virtual-host: /
  data:
    redis:
      host: 100.64.0.5
      port: 6389
      password: wuanfuck321.
      database: 0
      connect-timeout: 10000
  #  main:
#    web-application-type: reactive
  application:
    name: message
  datasource:
    url: jdbc:mysql://gz-cynosdbmysql-grp-94mi1uwn.sql.tencentcdb.com:20857/backend?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    password: wuanfuck321.
    driver-class-name:  com.mysql.cj.jdbc.Driver
    username: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform
    #        format_sql: true
    open-in-view: true
  cloud:
    inetutils:
      timeout-seconds: 2
      preferred-networks: 100.64.0.7
      default-hostname: 100.64.0.7
    consul:
      host: 100.64.0.5
      port: 8500
      discovery:
        instanceId: ${spring.application.name}:${spring.application.instance_id:${random.uuid}}
        prefer-ip-address: true
        service-name: ${spring.application.name}
        tags: message
        fail-fast: true


server:
  port: 8083

logging:
  pattern:
#    console: '%d{yyyy-MM-dd HH:mm:ss} [%X{traceId},%X{spanId}] %-5level %logger{36} - %msg%n'
    level: '%5p [${spring.application.name},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]'
  level:
    web: info

management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: '*'
  zipkin:
    tracing:
      endpoint: http://100.64.0.5:9411/api/v2/spans