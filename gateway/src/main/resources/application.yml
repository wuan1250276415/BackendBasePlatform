spring:
  data:
    redis:
      host: 42.194.184.206
      port: 6389
      password: wuanfuck321.
      connect-timeout: 10000
      database: 0
#  rabbitmq:
#    host: 42.194.184.206
#    port: 5672
#    username: wuan
#    password: wuanfuck321.
  main:
    web-application-type: reactive
  application:
    name: api-gateway
  cloud:
#    bus:
#      id: ${spring.application.name}:${server.port}
#      enabled: true
#      trace:
#        enabled: true
#      destination: backendbaseplatform
    gateway:
      routes:
        - id: backendbaseplatform
          uri: lb://backendbaseplatform
          predicates:
            - Path=/backendbaseplatform/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@userKeyResolver}"
            - name: Retry
              args:
                retries: 3
                statuses: INTERNAL_SERVER_ERROR
            - name: CustomCircuitBreaker
              args:
                name: backendbaseplatform
                value: /fallback
            - StripPrefix=1
        - id: bus
          uri: lb://bus
          predicates:
            - Path=/bus/**
    consul:
      host: 42.194.184.206
      port: 8500
      discovery:
        instanceId: ${spring.application.name}:${spring.application.instance_id:${random.uuid}}
        service-name: ${spring.application.name}
        tags: api-gateway
        prefer-ip-address: true
        healthCheckInterval: 15s
        ipAddress: 100.64.0.6
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: '*'
  zipkin:
    tracing:
      endpoint: http://42.194.184.206:9411/api/v2/spans

server:
  port: 8081

logging:
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n'
    level: '%5p [${spring.application.name},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]'
  level:
    web: debug

resilience4j:
  circuitbreaker:
    instances:
      backendbaseplatform:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 2000
        permittedNumberOfCallsInHalfOpenState: 3
        minimumNumberOfCalls: 5